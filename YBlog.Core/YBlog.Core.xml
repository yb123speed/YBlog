<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YBlog.Core</name>
    </assembly>
    <members>
        <member name="T:YBlog.Core.AOP.BlogLogAOP">
            <summary>
            拦截器BlogLogAOP 继承IIterceptor接口
            </summary>
        </member>
        <member name="M:YBlog.Core.AOP.BlogLogAOP.Intercept(Castle.DynamicProxy.IInvocation)">
            <summary>
            实例化IInterceptor唯一方法
            </summary>
            <param name="invocation">包含被拦截方法的信息</param>
        </member>
        <member name="T:YBlog.Core.AOP.ICaching">
            <summary>
            简单的缓存接口，只有查询和添加，以后会进行扩展
            </summary>
        </member>
        <member name="T:YBlog.Core.AOP.MemoryCaching">
            <summary>
            实例化缓存接口ICaching
            </summary>
        </member>
        <member name="M:YBlog.Core.AuthHelper.JwtHelper.IssueJWT(YBlog.Core.AuthHelper.TokenModelJWT)">
            <summary>
            颁发JWT字符串
            </summary>
            <param name="tokenModel"></param>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.AuthHelper.JwtHelper.SerializeJWT(System.String)">
            <summary>
            解析
            </summary>
            <param name="jwtStr"></param>
            <returns></returns>
        </member>
        <member name="P:YBlog.Core.AuthHelper.TokenModelJWT.Uid">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:YBlog.Core.AuthHelper.TokenModelJWT.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:YBlog.Core.AuthHelper.TokenModelJWT.Work">
            <summary>
            职能
            </summary>
        </member>
        <member name="M:YBlog.Core.AutoMapper.CustomProfile.#ctor">
            <summary>
            配置构造函数，用来创建关系映射
            </summary>
        </member>
        <member name="T:YBlog.Core.Controllers.BlogController">
            <summary>
            博客
            </summary>
        </member>
        <member name="M:YBlog.Core.Controllers.BlogController.#ctor(YBlog.Core.IServices.IAdvertisementServices,YBlog.Core.IServices.IBlogArticleServices,YBlog.Core.IRedisCacheManager)">
            <summary>
            构造函数
            </summary>
            <param name="advertisementServices"></param>
            <param name="blogArticleServices"></param>
            <param name="redisCacheManager"></param>
        </member>
        <member name="M:YBlog.Core.Controllers.BlogController.Get(System.Int32,System.Int32)">
            <summary>
            两数相加
            </summary>
            <param name="i">参数1</param>
            <param name="j">参数2</param>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.Controllers.BlogController.Get(System.Int32)">
            <summary>
            根据id查询Blog
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.Controllers.BlogController.GetBlogs">
            <summary>
            获取博客列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.Controllers.LoginController.GetJWTStr(System.String,System.String)">
            <summary>
            获取JWT的方法
            </summary>
            <param name="name"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="T:YBlog.Core.Controllers.ValuesController">
            <summary>
            Values控制器
            </summary>
        </member>
        <member name="M:YBlog.Core.Controllers.ValuesController.Get">
            <summary>
            获取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.Controllers.ValuesController.Get(System.Int32)">
            <summary>
            根据Id获取值
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:YBlog.Core.Controllers.ValuesController.Post(YBlog.Core.Models.Post)">
            <summary>
            创建对象
            </summary>
            <param name="post"></param>
        </member>
        <member name="M:YBlog.Core.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
            更新对象
            </summary>
            <param name="id"></param>
            <param name="value"></param>
        </member>
        <member name="M:YBlog.Core.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
            删除对象
            </summary>
            <param name="id"></param>
        </member>
    </members>
</doc>
